plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'realm-android'
}

apply from: "../dependencies.gradle"

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.trangdv.baseandroid"
        minSdkVersion 22
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    signingConfigs {
        release {
            storeFile file(properties.getProperty('KEY_STORE'))
            storePassword properties.getProperty('ANDROID_STORE_PASSWORD')
            keyAlias properties.getProperty('KEY_ALIAS')
            keyPassword properties.getProperty('ANDROID_KEY_PASSWORD')
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    dataBinding {
        enabled = true
    }

    flavorDimensions "version"
    productFlavors {
        dev {
            dimension "version"
            buildConfigField "String", "APIKEY", properties.getProperty("apiKey")
            buildConfigField "String", "BASE_URL", properties.getProperty("baseUrlDev")
//            buildConfigField "String", "BASE_URL_THAILAND", properties.getProperty("baseUrlDevThailand")
        }

        staging {
            dimension "version"
            buildConfigField "String", "BASE_URL", properties.getProperty("baseUrlStaging")
        }

        prod {
            dimension "version"
            buildConfigField "String", "BASE_URL", properties.getProperty("baseUrlProd")
        }
    }
}

dependencies {

    implementation kotlinStdlib
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation 'com.google.firebase:firebase-core:18.0.2'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation kotlin
    implementation splashScreen
    implementation koinAndroid
    implementation koinAndroidScope
    implementation koinAndroidViewModel
    implementation coroutinesCore
    implementation coroutinesAndroid
    implementation navigationFragment
    implementation navigationUi
    implementation retrofit
    implementation converterGson
    implementation adapterRxjava2
    implementation loggingInterceptor
    implementation urlConnection
    implementation gson
    implementation gsonConverter
    implementation lifecycleExtensions
    implementation lifecycleLivedata
    implementation lifecycleRuntime
    implementation lifecycleViewmodel
    implementation glide
    implementation paging
    implementation daggerAndroid
    implementation daggerSupport
    kapt daggerProcessor
    kapt daggerCompiler
    implementation timber
    implementation rxAndroid
    implementation rxKotlin
    implementation rxBinding
    implementation socket
    implementation firebaseMessaging
    implementation firebaseAnalytics
    implementation banner
    implementation indicator
    implementation circle
}